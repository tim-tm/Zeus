package me.tim.features.module.impl.exploit;

import me.tim.Statics;
import me.tim.features.event.EventPacket;
import me.tim.features.event.EventPreMotion;
import me.tim.features.event.EventTick;
import me.tim.features.event.api.EventTarget;
import me.tim.features.module.Category;
import me.tim.features.module.Module;
import me.tim.ui.click.settings.impl.NumberSetting;
import me.tim.util.Timer;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.network.Packet;
import org.lwjgl.input.Keyboard;

import java.util.ArrayList;

public class Blink extends Module {
    private final ArrayList<Packet<?>> packets;
    private EntityOtherPlayerMP blinkEntity;

    public Blink() {
        super("Blink", "Blink!", Keyboard.KEY_NONE, Category.EXPLOIT);
        this.packets = new ArrayList<>();
    }

    @Override
    protected void setupSettings() { }

    @EventTarget
    private void onPacket(EventPacket eventPacket) {
        if (eventPacket.getState().equals(EventPacket.State.RECEIVE)) return;

        this.packets.add(eventPacket.getPacket());
        eventPacket.setCancelled(true);
    }

    @Override
    public void onEnable() {
        super.onEnable();
        if (Statics.getPlayer() != null) {
            this.packets.clear();
            this.blinkEntity = new EntityOtherPlayerMP(Statics.getWorld(), Statics.getPlayer().getGameProfile());
            this.blinkEntity.setPositionAndRotation(Statics.getPlayer().posX, Statics.getPlayer().posY, Statics.getPlayer().posZ, Statics.getPlayer().rotationYaw, Statics.getPlayer().rotationPitch);

            if (!Statics.getWorld().loadedEntityList.contains(this.blinkEntity))
                Statics.getWorld().addEntityToWorld(this.blinkEntity.getEntityId(), this.blinkEntity);
        }
    }

    @Override
    public void onDisable() {
        super.onDisable();
        if (Statics.getPlayer() != null) {
            for (Packet<?> packet : this.packets) {
                Statics.sendPacket(packet);
            }

            if (Statics.getWorld().loadedEntityList.contains(this.blinkEntity))
                Statics.getWorld().removeEntity(this.blinkEntity);
        }
    }
}
